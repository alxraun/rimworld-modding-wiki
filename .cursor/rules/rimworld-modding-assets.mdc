---
description: "Assets" module Rimworld modding documentation
globs: 
alwaysApply: true
---
`\\?\C:\Projects\rimworld\wiki_workspace\wiki\assets\assets-tutorial.md`:

```````md
## Modding Tutorials/Assets - Cheat Sheet

**Purpose:** Extract base assets from RimWorld for modding.

**Tools:**

- UnityEx (RimWorld 1.0 Archives)
    1. Download UnityEx.
    2. Place `UnityEX.exe` in RimWorld directory (optional).
    3. Run `UnityEX.exe`.
    4. Open `.asset` file (e.g., `RimWorld\RimWorldWin64_Data\resources.assets`).
    5. Extract files ("Extract with convert" for `.tex` to `.dds`).
    6. Files in `Unity_Assets_Files` folder (same directory as `.asset`).

- Unity Assets Bundle Extractor (RimWorld 1.0 Archives)
    1. Download Unity Assets Bundle Extractor.
    2. Unzip.
    3. Run `AssetBundleExtractor.exe`.
    4. Open `.asset` file (e.g., `RimWorld\RimWorldWin64_Data\resources.assets`).
    5. Select files.
    6. Plugins -> "Export to .png" or "Export sound" (select files by type).
    7. Choose storage folder.

- AssetStudio (RimWorld 1.5 Archives)
    1. Download AssetStudio (net472 recommended if unsure).
    2. Unzip.
    3. Run `AssetStudioGUI.exe`.
    4. File -> Load file (for `.assets`) or File -> Load folder (for DLC Asset Bundles).
       - `.assets` example: `RimWorld\RimWorldWin64_Data\resources.assets`
       - DLC Asset Bundles example: `RimWorld\Data\Anomaly\AssetBundles`
    5. Asset List tab.
    6. Select files.
    7. Right click -> "Export selected assets" (audio/textures).
    8. Choose storage folder.

**Note:**

- Use [Recommended graphics software](mdc:https:/rimworldwiki.com/wiki/Modding_Tutorials/Recommended_software#Graphics_Software) for editing extracted assets.


```````

`\\?\C:\Projects\rimworld\wiki_workspace\wiki\assets\sounds-guide.md`:

```````md
## Modding Tutorials/Sounds - Cheat Sheet

**Sound System Elements:**

- **Sound Event:** Signal from game code to play a sound. Defined in game code.
- **SoundDef:** XML definition of sound behavior. Controls sound file playback, variations, parameters. Edited in XML or in-game (legacy editor, XML editing recommended).
- **Sound File:** Raw audio file (wav, ogg, mp3) referenced by SoundDef. Created and edited externally.

**Getting Sound Editor Started (Legacy - XML Editing Recommended):**
- Enable Development Mode in game options.
- Access Package Editor (No longer in UI - Edit XML directly).
- Select SoundDef type.
- Choose/create mod package.
- Create/Open SoundDef package.
- Create new SoundDef.
- Select SoundDef for editing.

**Adding Sound to Game (XML Method):**
1. **Identify Sound Event Name:** Find the game event name triggering the desired sound (see external list if available).
2. **SoundDef `defName`:** Set `defName` in your SoundDef XML to match the game event name.
    - Use `eventNames` list for multiple event triggers.
3. **Create Sound File:** Make `.wav`, `.ogg`, or `.mp3` sound file.
4. **Place Sound File:** In `Sounds` folder of your mod.
5. **Edit SoundDef XML:**
    - Add `<subSounds>` list.
    - Add `<li>` within `<subSounds>`.
    - Add `<grains>` list within `<li>`.
    - Add `<li Class="AudioGrain_Clip">` within `<grains>`.
    - Set `<clipPath>` to sound file path relative to mod's root (`Sounds/Path/To/YourSound`, no extension).
6. **Test Sound:** In-game, trigger the sound event.

**How SoundDefs Work:**

- Game code triggers sound events by name.
- Sound system searches loaded mods for matching `SoundDef` by `defName`.
- `SoundDef` controls sound playback behavior (files, parameters, etc.).
- XML defines `SoundDef` properties.

**Sound Parameters:**

- Sound events can pass parameters (e.g., `ImpactSpeed`, `FireSize`, `CameraAltitude`).
- Parameters drive dynamic changes in sound properties (volume, pitch, etc.).
- Applied to: Sustainers (continuous sounds) or OneShots (single play sounds).
- Update Frequency:
    - Once per sample: Parameter value fixed at sound start.
    - Constantly: Parameter value updates every frame (dynamic changes).
- Parameter Examples: `ImpactSpeed` (bullet impact volume), mouse cursor speed (button mouseover pitch).
- Parameter Types: Defined in [Sound events and parameters list](mdc:https:/docs.google.com/spreadsheet/pub?key=0AgWNUTNe4QC7dGpXa2ZHQTdPSU8yOVdrMllfbV9leEE&output=html) (external link).

**Key SoundDef Elements:**

- `<defName>`: Unique identifier for the SoundDef.
- `<eventNames>`: List of game event names that trigger this SoundDef.
- `<subSounds>`: List of sub-sounds to play.
- `<grains>`: List of audio samples (grains) for a sub-sound.
- `<clipPath>`: Path to the sound file within the mod's `Sounds` folder.
- `<volumeRange>`: Random volume variation.
- `<pitchRange>`: Random pitch variation.
- `<paramMappings>`: Map game parameters to sound properties.
- `<sustainers>` vs. `<oneshots>`: Sound playback behavior.
- `<filters>`: Audio filters (e.g., distance-based volume).


```````

`\\?\C:\Projects\rimworld\wiki_workspace\wiki\assets\textures-guide.md`:

```````md
## Textures - Cheat Sheet

**Creating Mod Textures:**

- **File Formats:** PNG (recommended), JPG, PSD, DDS (with mods).
- **Style:** Vanilla style is vector, but source is raster. Use preferred technique.
- **Resolution:**
    - Vanilla: 64 pixels per tile (PPT).
    - Mods: 128 or 256 PPT common.
    - Higher resolutions discouraged (VRAM usage, compression artifacts).
- **Reference Vanilla:** Use RimWorld Art Source (Dropbox link provided in wiki page) as template.
- **Location:** `/Textures` folder in mod structure.
    - Use namespace folders or filename prefixes to avoid collisions.
- **Texture Path:** Relative to `/Textures` folder, e.g., `MyMod/MyTexture`.

**Texture Masking:**

- (Placeholder in source, needs content if available elsewhere)

**Building Textures:**

- **Tile Grid:** Create textures on tile grid matching building size.
- **Centering:** Center texture on canvas to simplify alignment.
- **Example:** 2x2 building on 3x3 canvas.

**Apparel Textures:**

- **Overlay:** Headwear & body apparel textures overlay 1:1 on pawns.
- **Templates:** Use vanilla body/apparel textures as templates (RimWorld Art Source).
- **Headwear:**
    - Minimum 3 textures: south, north, east facings.
    - West facing: Optional (mirrored from east if omitted).
    - Ground texture: Optional, but recommended (total 3+1 textures).
    - Texture masks: Use if needed (total 6+2 with masks).
- **Body Apparel:**
    - Same texture usage as headwear.
    - 5 body types: male, female, thin, hulk, fat.
    - Total: 15+1 textures (or 30+2 with masks).
- **Utility Packs:** (Tox gas canisters)
    - Single texture with body-type based offsets.
    - Utility-slot items only.
    - Texture requirements same as headwear (3+1, or 6+2 with masks).


```````
